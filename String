#include <iostream>
#include <string.h>

using namespace std;
class String
{
    char *str;
    int len;
public:
    String(int l = 0); // конструктор по умолчанию
    String(const char *); // конструктор копирует содержимое переданной строки
    String(String &); // конструктор копирования: создаёт копию объекта String
    ~String() {
        if(str) delete []str; str = NULL;
    }
    int strLength(); // длина строки
    String & operator = (const String &);
    char &operator [](int);
    bool operator == (String &);
    bool operator != (String &);
    String operator + (const String &);
    String & operator += (const String &);
    friend istream & operator >> (istream &, String &);
    friend ostream & operator << (ostream &, String &);
    int BMSearch(String &);
};
String::String(int l): len(l){
    str = new char[len + 1];
    str[0] = '\0';
}
String::String(const char *s){
    len = strlen(s);
    str = new char[len + 1];
    strcpy(str, s);
}
String::String(String &s){
    len = s.len;
    str = new char[len + 1];
    strcpy(str, s.str);
}
int String::strLength(){
    return len;
}
istream & operator >> (istream &is, String &s){
    char temp[100];
    is >> temp;
    s = String(temp);
    return is;
}
ostream & operator << (ostream &os, String &s){
    os << s.str;
    return os;
}
int main()
{
    String s1("На дворе трава на траве дрова");
    String s2("траве");

    String s3 = s1 + s2;

}
